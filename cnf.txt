S0 -> S
VAR -> variable
OPERATOR -> + | - | * | / | V46 V46 | V47 V47 | %
OPERATORBOOL -> and | or
OPERATORCOMPARISON -> < | > | V48 V49 | V50 V49 | V49 V49
VAROPS -> variable | number | V4 VAROPS | V19 V20 | V19 V6
RANGE -> V51 INBRACKET
BOOL -> True | False
RETURN -> V52 EXPRESSION | V52 VAROPS
ELSE -> V53 V11
RAISE -> V54 INBRACKET
S -> V0 VAROPS | V1 V2 | V3 V2 | V29 V2 | V30 V2 | V40 V2 | V7 V8 | V7 V32 | V38 V11 | V53 V11 | V16 V17 | V19 V20 | V19 V6 | V25 V26 | V43 V44 | V10 V11 | V12 V13 | V34 V35 | V12 V41 | V21 V22 | V23 V11 | V54 INBRACKET | V42 V11
V0 -> VAR V49
V1 -> VAR V55
V2 -> V49 VAROPS
V3 -> VAR V47
V4 -> VAROPS OPERATOR
INBRACKET -> V5 V6 | V31 V6
V5 -> V56 VAROPS
V6 -> )
FORLOOP -> V7 V8 | V7 V32
V7 -> V57 VAR
V8 -> V58 RANGE
EXPRESSION -> V9 VAROPS | V33 VAR | True | False
V9 -> VAROPS OPERATORCOMPARISON
WHILELOOP -> V10 V11
V10 -> V59 EXPRESSION
V11 -> :
IMPORT -> V12 V13 | V34 V35 | V12 V41
V12 -> V60 VAR
V13 -> V61 V46
STRING -> V14 V15 | V36 V37
V14 -> V62 V63
V15 -> '
WITH -> V16 V17
V16 -> V64 V65
INPUTFUNC -> V18 INPUTFUNC | variable
V18 -> INPUTFUNC V66
FUNCTION -> V19 V20 | V19 V6
V19 -> VAR V56
V20 -> INPUTFUNC V6
PRINT -> V21 V22
V21 -> V67 V56
V22 -> STRING V6
ELIF -> V23 V11
V23 -> V68 EXPRESSION
CLASS -> V24 V11
V24 -> V69 VAR
COMMENT -> V25 V26 | V43 V44
V25 -> V62 V62
V17 -> V27 VAR
V27 -> INBRACKET V70
V26 -> V14 V28
V28 -> V25 V15
V29 -> VAR V71
V30 -> VAR V72
V31 -> V56 INBRACKET
V32 -> V58 VAR
V33 -> VAR OPERATORBOOL
V34 -> V61 VAR
V35 -> V70 VAR
V36 -> V37 V63
V37 -> "
IF -> V38 V11
V38 -> V73 EXPRESSION
METHOD -> V39 FUNCTION
V39 -> VAR V74
V40 -> VAR V46
DEF -> V42 V11
V42 -> V75 FUNCTION
V43 -> V37 V37
V41 -> V34 V35
V44 -> V36 V45
V45 -> V43 V37
V46 -> *
V47 -> /
V48 -> <
V49 -> =
V50 -> >
V51 -> range
V52 -> return
V53 -> else
V54 -> raise
V55 -> -
V56 -> (
V57 -> for
V58 -> in
V59 -> while
V60 -> from
V61 -> import
V62 -> '
V63 -> string
V64 -> with
V65 -> open
V66 -> ,
V67 -> print
V68 -> elif
V69 -> class
V70 -> as
V71 -> +
V72 -> %
V73 -> if
V74 -> .
V75 -> def