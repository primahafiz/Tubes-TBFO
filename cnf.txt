S0 -> S
S -> S NEWLINE | V0 S | V1 VAROPS | V2 V3 | V4 V3 | V30 V3 | V31 V3 | V42 V3 | V8 V9 | V8 V33 | V23 V12 | V57 V12 | V17 V18 | V20 V21 | V20 V7 | V25 V26 | V45 V46 | V55 EXPRESSION | V55 VAROPS | V11 V12 | V13 V14 | V35 V36 | V13 V43 | V56 INBRACKET | V39 V12 | V58 INBRACKET | V22 V12 | V44 V12
VAR -> variable
NEWLINE -> NEWLINE V48 | newline
BOOL -> True | False
OPERATOR -> + | - | * | / | V49 V49 | V50 V50 | %
OPERATORBOOL -> and | or
OPERATORCOMPARISON -> < | > | V51 V52 | V53 V52 | V52 V52
VAROPS -> variable | number | string | V5 VAROPS | True | False | V40 FUNCTION | V20 V21 | V20 V7
RANGE -> V54 INBRACKET
RETURN -> V55 EXPRESSION | V55 VAROPS
PRINT -> V56 INBRACKET
ELSE -> V57 V12
RAISE -> V58 INBRACKET
V0 -> S NEWLINE
V1 -> VAR V52
V2 -> VAR V59
V3 -> V52 VAROPS
V4 -> VAR V50
V5 -> VAROPS OPERATOR
INBRACKET -> V6 V7 | V32 V7
V6 -> V60 VAROPS
V7 -> )
FORLOOP -> V8 V9 | V8 V33
V8 -> V61 VAR
EXPRESSION -> V10 VAROPS | V34 VAR | True | False
V10 -> VAROPS OPERATORCOMPARISON
WHILELOOP -> V11 V12
V11 -> V62 EXPRESSION
V12 -> :
IMPORT -> V13 V14 | V35 V36 | V13 V43
V13 -> V63 VAR
V14 -> V64 V49
STRING -> V15 V16 | V37 V38
V15 -> V65 V66
V16 -> '
WITH -> V17 V18
V17 -> V67 V68
INPUTFUNC -> V19 INPUTFUNC | variable | number | string | V5 VAROPS | True | False | V40 FUNCTION | V20 V21 | V20 V7
V19 -> INPUTFUNC V69
FUNCTION -> V20 V21 | V20 V7
V20 -> VAR V60
V21 -> INPUTFUNC V7
DEF -> V22 V12 | V44 V12
V22 -> V70 FUNCTION
IF -> V23 V12
V23 -> V71 EXPRESSION
CLASS -> V24 V12
V24 -> V72 VAR
COMMENT -> V25 V26 | V45 V46
V25 -> V65 V65
V9 -> V27 V12
V27 -> V73 RANGE
V18 -> V28 VAR
V28 -> INBRACKET V74
V26 -> V15 V29
V29 -> V25 V16
V30 -> VAR V75
V31 -> VAR V76
V32 -> V60 INBRACKET
V34 -> VAR OPERATORBOOL
V35 -> V64 VAR
V36 -> V74 VAR
V37 -> V38 V66
V38 -> "
ELIF -> V39 V12
V39 -> V77 EXPRESSION
METHOD -> V40 FUNCTION
V40 -> VAR V78
V33 -> V41 V12
V41 -> V73 VAR
V42 -> VAR V49
V44 -> V70 VAR
V45 -> V38 V38
V43 -> V35 V36
V46 -> V37 V47
V47 -> V45 V38
V48 -> newline
V49 -> *
V50 -> /
V51 -> <
V52 -> =
V53 -> >
V54 -> range
V55 -> return
V56 -> print
V57 -> else
V58 -> raise
V59 -> -
V60 -> (
V61 -> for
V62 -> while
V63 -> from
V64 -> import
V65 -> '
V66 -> string
V67 -> with
V68 -> open
V69 -> ,
V70 -> def
V71 -> if
V72 -> class
V73 -> in
V74 -> as
V75 -> +
V76 -> %
V77 -> elif
V78 -> .